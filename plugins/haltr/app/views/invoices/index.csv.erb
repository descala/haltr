<%=
  cols = [
    [ :invoice,  l(:field_number),               :number],
    [ :invoice,  l(:field_date),                 :date],
    [ :client,   l(:field_taxcode),              :taxcode],
    [ :client,   l(:field_name),                 :name],
    [ :client,   l(:field_address),              :address],
    [ :invoice,  l(:field_import),               :import],
    [ :invoice,  l(:label_tax_plural),           :taxes],
    [ :invoice,  l(:label_tax_plural),           :tax_amount],
    [ :invoice,  l(:label_invoice_total),        :total],
    [ :invoice,  l(:field_discount_text),        :discount_text],
    [ :invoice,  l(:field_discount_percent),     :discount_percent],
    [ :invoice,  l(:field_currency),             :currency],
    [ :invoice,  l(:field_state),                :state],
    [ :invoice,  l(:field_due_date),             :due_date],
    [ :invoice,  l(:field_extra_info),           :extra_info],
    [ :invoice,  l(:field_terms),                :terms_description],
    [ :invoice,  l(:field_ponumber),             :ponumber],
    [ :invoice,  l(:field_payment_method),       :payment_method],
    [ :invoice,  l(:field_accounting_cost),      :accounting_cost],
    [ :invoice,  l(:field_posicio_comanda),      :posicio_comanda],
    [ :invoice,  l(:field_delivery_note_number), :delivery_note_number],
    [ :invoice,  l(:field_charge_amount),        :charge_amount],
    [ :invoice,  l(:field_charge_reason),        :charge_reason],
    [ :invoice,  l(:unitat_tramitadora),         :codi_unitat_tramitadora],
    [ :invoice,  l(:organ_gestor),               :organ_gestor],
    [ :invoice,  l(:oficina_comptable),          :oficina_comptable],
    [ :invoice,  l(:field_file_reference),       :file_reference],
  ]

  CSV.generate(
    :headers       => cols.collect {|c| c[1] },
    :write_headers => true
  ) do |csv|
    @invoices.each do |invoice|
      csv << cols.collect {|o,l,m|
        case o.to_s
        when 'invoice'
          case m
          when :payment_method
            @invoice = invoice
            payment_method_info.gsub(/<br \/>/,'') rescue ""
          when :state
            l("state_#{invoice.state}")
          when :organ_gestor
            invoice.unitat_tramitadora rescue ""
          when :oficina_comptable
            invoice.oficina_comptable rescue ""
          when :taxes
            invoice.taxes.collect {|t|
              "#{t.name} #{t.percent}"
            }.join(", ") rescue ""
          else
            invoice.send(m) rescue nil
          end
        when 'client'
          if invoice.client
            invoice.client.send(m)
          end
        end
      }.flatten
    end
  end.to_s.gsub(/\r\n?/, '\n').html_safe
%>
